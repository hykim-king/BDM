<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.test.bdm.user">
  
	  <update id="doCancleBlock" parameterType = "UserVO">
	        UPDATE USERS
	        SET block = NULL
	        WHERE id = #{id}
	  </update>
  
  
	  <select id="doSelectBlockUsers" parameterType = "UserDTO" resultType = "UserVO">
	        SELECT id, name, reg_dt as regDt, block
			FROM users
			WHERE block IS NOT NULL
	  </select>
	  
	  <update id="doBlock" parameterType = "UserVO">
	        UPDATE USERS
	        SET block = SYSDATE + #{block}
	        WHERE id = #{id}
	  </update>
	  
	  <select id="doSelectOne" parameterType = "String" resultType = "UserVO">
		    SELECT
		        id,
		        no,
		        pw,
		        email,
		        name,
		        birth,
		        gender,
		        height,
		        weight,
		        activity,
		        reg_dt,
		        user_filter,
		        block
		    FROM USERS
		    WHERE id = #{id}
	  </select>
  
    <!-- div -->
    <sql id="divCondition">
        <choose>
            <when test=" ''!=div and '20' == div ">20
                AND div = '20'
            </when>
            <otherwise> 10
                AND div = '10'
            </otherwise>
        </choose>
    </sql>

    <sql id="searchCondition">
        <choose>
            <when test=" ''!= searchDiv and '10' == searchDiv ">
                AND name LIKE '%' || #{searchWord} || '%'
            </when>
            <when test=" ''!= searchDiv and '20' == searchDiv ">
                AND contents LIKE '%' || #{searchWord} || '%'
            </when>
            <when test=" ''!= searchDiv and '30' == searchDiv ">
                AND mod_id LIKE '%' || #{searchWord} || '%'
            </when>
        </choose>
    </sql>
    
    <select id="doRetrieve" parameterType="UserDTO"
        resultType="UserVO">
        SELECT A.*,B.totalCnt
        FROM (
            SELECT  
                tt1.id as id,  
                tt1.rnum as no,
                tt1.email as email,
                tt1.name as name,
                tt1.birth as birth,
                tt1.gender as gender,
                tt1.reg_dt as regDt,
                tt1.user_filter as userFilter
            FROM (
                SELECT ROWNUM rnum, T1.*
                FROM (
                    SELECT *
                    FROM users
                    --WHERE 검색
                    WHERE 1=1
                <!-- <include refid="divCondition"/> -->
                <include refid="searchCondition" />
                    ORDER BY reg_dt DESC
                )T1 --10,20,30,...
                <![CDATA[   WHERE ROWNUM <=#{pageSize} * (#{pageNo}-1) + #{pageSize} ]]>
            )TT1
            --1,11,21,31,..
            <![CDATA[ WHERE rnum >= #{pageSize} * (#{pageNo}-1) + 1 ]]>
        )A
        CROSS JOIN (
            SELECT COUNT(*) totalCnt
            FROM users
            --WHERE 검색
            WHERE 1=1
            <!-- <include refid="divCondition"/> -->
            <include refid="searchCondition" />
        )B
    </select>  
    
    <select id="doSelectOneByEmail" parameterType="com.test.bdm.user.domain.UserVO" resultType="com.test.bdm.user.domain.UserVO">
        SELECT
            id,
            no,
            pw,
            email,
            name,
            birth,
            gender,
            height,
            weight,
            activity,
            reg_dt,
            user_filter,
            block
         FROM               
             users          
         WHERE email = #{email}     
    </select>

    <delete id="doDelete" parameterType = "UserVO">
        DELETE FROM USERS
        WHERE id = #{id}
    </delete>

    <select id = "doFindSalt" parameterType = "UserVO" resultType = "UserVO">
        SELECT SALT
        FROM USERS
        WHERE id = #{id}
    </select>

    <update id="changePassword" parameterType = "UserVO">
        UPDATE USERS
        SET pw = #{pw}
        WHERE id = #{id}
    </update>
  
    <select id="doFindPassword" parameterType = "com.test.bdm.user.domain.UserVO" resultType = "UserVO">
        SELECT pw
        FROM users
        WHERE name = #{name}
        AND birth = #{birth}
        AND id = #{id}
        AND email = #{email}
    </select>  
  
    <select id="doFindId" parameterType = "com.test.bdm.user.domain.UserVO" resultType = "UserVO">
        SELECT id
        FROM users
        WHERE name = #{name}
        AND birth = #{birth}
        AND email = #{email}
    </select>
  
    <update id="doUpdate" parameterType = "UserVO">
        UPDATE USERS
        SET height = #{height},
            weight = #{weight},
            activity = #{activity}
        WHERE id = #{id}
    </update>
    
    <select id="doCheckEmail" parameterType = "com.test.bdm.user.domain.UserVO" resultType = "int">
        SELECT COUNT(*) cnt
        FROM users
        WHERE email IN(#{email})
    </select>
    
    <select id="doCheckPassword" parameterType = "com.test.bdm.user.domain.UserVO" resultType = "int">
        SELECT COUNT(*) cnt
        FROM users
        WHERE pw IN(#{pw})
    </select>
    
    <select id="doCheckId" parameterType = "com.test.bdm.user.domain.UserVO" resultType = "int">
        SELECT COUNT(*) cnt
        FROM users
        WHERE id IN(#{id})
    </select>
    
    <insert id="doSave" parameterType = "com.test.bdm.user.domain.UserVO">
        INSERT INTO users(
	        id,
	        no,
	        pw,
	        email,
	        name,
	        birth,
	        gender,
	        height,
	        weight,
	        activity,
	        reg_dt,
	        user_filter,
	        salt
        ) VALUES (          
            #{id},
            users_seq.NEXTVAL,
            #{pw},
            #{email},
            #{name},
            #{birth},
            #{gender},
            #{height},
            #{weight},
            #{activity},
            SYSDATE,
            2,
            #{salt}
        )                   
    </insert>
    
  </mapper>