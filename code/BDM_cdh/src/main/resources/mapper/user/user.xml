<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Dao: query찾는 분류 기준 
namespace+id -> com.test.bdm.user.doSelectOne
-->  
<mapper namespace="com.test.bdm.user">

   <select id="idDuplicateCheck" parameterType="UserVO" resultType="int">
         SELECT                   
            COUNT(*) cnt         
         FROM                     
            userss                
         WHERE ID = #{userId}   
   </select>

    <sql id="searchCondition">
	    <where>
	        <choose>
	            <when test="searchDiv !=null and searchDiv == '10'">
	                userId = #{searchWord}
	            </when>
                <when test="searchDiv !=null and searchDiv == '20'">
                    name LIKE #{searchWord} ||'%'
                </when>
                <when test="searchDiv !=null and searchDiv == '30'">
                    email LIKE #{searchWord} ||'%'
                </when>                  	            
	        </choose>
	           
	    </where>            
    </sql>

    <select id="doRetrieve" parameterType="UserVO" resultType="UserVO">
        
		SELECT A.*,B.*
		FROM(
		    SELECT TT1.rnum AS no,
		           TT1.user_id,
		           TT1.name,
		           TT1.u_level as levelIntValue ,
		           TT1.login,
		           TT1.recommend,
		           TT1.email,
		           DECODE( TO_CHAR(TT1.reg_dt,'YYYY-MM-DD'),TO_CHAR(SYSDATE,'YYYY-MM-DD')
		                   ,TO_CHAR(TT1.reg_dt,'HH24:MI')
		                   ,TO_CHAR(TT1.reg_dt,'YYYY-MM-DD')) AS reg_dt
		    FROM (
		        SELECT ROWNUM AS rnum, T1.*
		        FROM (SELECT *
		              FROM users
		              --WHERE조건 user_id(10),name(20),email(30),
                      <include refid="searchCondition"></include>
		              ORDER BY reg_dt desc
		        )T1      
           
		     <![CDATA[   WHERE ROWNUM <= ( #{pageSize} * (#{pageNo} - 1)+ #{pageSize} ) 
		    )TT1
		    WHERE rnum >= ( #{pageSize} * (#{pageNo} - 1)+ 1 ) ]]>
		)A
		CROSS JOIN
		(
		    SELECT COUNT(*) total_cnt
		    FROM users
		    --WHERE조건
            <include refid="searchCondition"></include>		    
		)B
        
    </select>
    
    
    <resultMap type="UserVO" id="userMap">
        <result column="ID"     property="userId"/>
        <result column="NO"        property="number"/>
        <result column="PW"    property="password"/>
        <result column="EMAIL"       property="email"/>
        <result column="NAME"     property="name"/>
        <result column="BIRHY"       property="birth"/>
        <result column="GENDER"       property="birth"/>
        <result column="HEIGHT"       property="height"/>
       <result column="WEIGHT"       property="weight"/>
        <result column="REG_DT"       property="regDt"/>
        


    </resultMap>
    
    <select id="getAll" parameterType="UserVO" resultMap="userMap">
		 SELECT  t1.id,                                      
		         t1.name,                                         
		         t1.pw ,                                                                                                                                            
		         t1.email,                                        
		         TO_CHAR(t1.reg_dt,'YYYY-MM-DD HH24:MI:SS') reg_dt
		 FROM                                                     
		    userss t1                                             
		 WHERE id LIKE #{userId}||'%'                                
		 ORDER BY t1.user_id                                      
    </select>

    <select id="getCount" resultType="int" parameterType="UserVO">
	     SELECT                   
	        COUNT(*) cnt         
		 FROM                     
		    userss                
		 WHERE id LIKE #{userId} ||'%'
    </select>


    <update id="doUpdate" parameterType="UserVO">
	     UPDATE users             
		 SET name       = #{name}       
		     ,password  = #{password}       
		     ,u_level   = #{levelIntValue}       
		     ,login     = #{login}       
		     ,recommend = #{recommend}       
		     ,email     = #{email}       
		     ,reg_dt    = SYSDATE 
		 WHERE                    
		     user_id = #{userId}          
    </update>




    <select id="doSelectOne" parameterType="UserVO" 
    resultType="UserVO">
		SELECT             
		     id,      
		     name,          
		     password,      
		     email,         
		     regDt     
		 FROM               
		     userss          
		 WHERE id = #{userId}      
    </select>


    <insert id="doSave" parameterType="UserVO">
		INSERT INTO userss (
		    id,
		    pw,
		    no,
		    email,
		    name,
		    birth,
		    gender,
		    height,
		    weight,
		    reg_dt,
		    user_filter
		) VALUES (
		    #{userId},
		    #{password},
		    1,
		    #{email},
		    #{name},
		    #{birth},
		    #{gender},
		    #{height},
		    #{weight},
		    SYSDATE,
		    1
		)                  
    </insert>


    <delete id="doDelete" parameterType="UserVO">
	    DELETE FROM userss
	    WHERE  id = #{userId}
    </delete>

</mapper>  